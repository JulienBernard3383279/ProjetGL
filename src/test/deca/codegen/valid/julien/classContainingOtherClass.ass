	TSTO #8
	BOV pile_pleine
	ADDSP #7
; start main program
; Main program
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD equals_Object, R0
	STORE R0, 2(GB)
; Construction de la table des méthodes de Cote
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD equals_Object, R0
	STORE R0, 4(GB)
; Construction de la table des méthodes de Triangle
	LEA 1(GB), R0
	STORE R0, 5(GB)
	LOAD equals_Object, R0
	STORE R0, 6(GB)
; Seprate constant stack and temporary variables
; Beginning of main instructions:
	NEW #4, R3
	BOV heap_overflow_error
	LEA 5(GB), R0
	STORE R0, 0(R3)
	PUSH R3
	BSR init.Triangle
	POP R3
	STORE R3, 7(GB)
	LOAD 7(GB), R3
	LOAD 1(R3), R3
	LOAD 1(R3), R3
	LOAD #1, R4
	CMP R4, R3
	BNE debutElse0
	LOAD #1, R1
	WINT
	BRA finElse0
debutElse0:
	LOAD #0, R1
	WINT
finElse0:
	HALT
pile_pleine:
	WSTR "Erreur : pile pleine"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
overflow_error:
	WSTR "Error: Arithmetic Overflow"
	WNL
	ERROR
heap_overflow_error:
	WSTR "Error: Heap OverFlow"
	WNL
	ERROR
init.Cote:
	PUSH R2
	PUSH R3
	PUSH R4
	LOAD -2(LB), R2
	LOAD #1, R3
	LOAD R3, R0
	STORE R0, 1(R2)
	POP R4
	POP R3
	POP R2
	RTS
init.Triangle:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	LOAD -2(LB), R2
	NEW #2, R4
	BOV heap_overflow_error
	LEA 3(GB), R0
	STORE R0, 0(R4)
	PUSH R4
	BSR init.Cote
	POP R4
	LOAD R4, R0
	STORE R0, 1(R2)
	NEW #2, R5
	BOV heap_overflow_error
	LEA 3(GB), R0
	STORE R0, 0(R5)
	PUSH R5
	BSR init.Cote
	POP R5
	LOAD R5, R0
	STORE R0, 2(R2)
	NEW #2, R6
	BOV heap_overflow_error
	LEA 3(GB), R0
	STORE R0, 0(R6)
	PUSH R6
	BSR init.Cote
	POP R6
	LOAD R6, R0
	STORE R0, 3(R2)
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	RTS
equals_object:
	TSTO #0
	LOAD -3(SP), R0
	LOAD -2(SP), R1
	CMP R0, R1
	SEQ R0
	RTS
; end main program
